version: "3.4"
x-default-rails: &default_rails
  build: "./.build/docker/app"
  links:
    - redis
    - postgres
  volumes:
    - ./app:/app
    - .build/.bundle-cache-dir/app:/usr/local/bundle/
    - .build/sockets:/sockets
    - .build/keys:/keys
    - .build/storage:/storage
    - /tmp:/tmp
  environment:
    - DOCKER=true
    - RUBYOPT=-W:no-deprecated -W:no-experimental
    - REDIS_URL=redis://redis:6379/4
    - RAILS_ENV=production
    - SECRET_KEY_BASE=<%= @secret_key_base %>
    - LOAD_BALANCER_ADDRESS=<%= @load_balancer_ip %>
    - TIME_ZONE=UTC
    - DATABASE_URL=postgres://postgres:1234@postgres/psm
    - LOGIN_TOKEN=<%= @login_token %>
    - ZEROSSL_EMAIL=<%= @zero_ssl_email %>
    - STORAGE=/storage
    - KEYS_LOCATION=/keys

services:
  app:
    <<: *default_rails
    restart: always
    command: bundle exec puma -b unix:///sockets/puma.sock

  sidekiq:
    <<: *default_rails
    restart: always
    command: bundle exec sidekiq

  redis:
    image: redis:alpine
    restart: always

  postgres:
    image: postgres:12-alpine
    restart: always
    volumes:
      - .build/.db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1234

  nginx:
    build: "./.build/nginx"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .build/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./app:/app
      - .build/keys:/keys
      - .build/sockets:/sockets
      - .build/storage:/storage
      - /tmp:/tmp

  nginx_acme:
    build: "./.build/nginx"
    ports:
      - "80:80"
    volumes:
      - .build/nginx/sites-enabled-acme:/etc/nginx/sites-enabled
      - ./app:/app
